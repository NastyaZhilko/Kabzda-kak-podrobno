{"version":3,"sources":["components/Accordion/Accordion.tsx","components/Rating/Rating.tsx","components/UncontrolledAccordion/UncontrolledAccordion.tsx","components/UncontrolledRating/UncontrolledRating.tsx","components/UncontrolledOnOff/UncontrolledOnOff.tsx","components/OnOff/OnOff.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AccordionTitle","props","console","log","onClick","onChange","collapsed","title","AccordionBody","items","map","i","index","key","value","Accordion","titleValue","Rating","Star","selected","UncontrolledAccordion","useState","setCollapsed","UncontrolledRating","defaultValue","setValue","UncontrolledOnOff","defaultOn","on","setOn","onStyle","width","height","border","display","padding","backgroundColor","offStyle","marginLeft","indicatorStyle","borderRadius","style","OnOff","PageTitle","className","App","valueRating","setValueRating","valueCollapsed","setValueCollapsed","valueOn","setValueOn","toString","x","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a52f0161.chunk.js","sourcesContent":["import React from \"react\";\r\ntype ItemType = {\r\n    title: string\r\n    value: any\r\n}\r\ntype AccordionPropsType = {\r\n    titleValue: string\r\n    collapsed: boolean\r\n    onChange:(collapsed: boolean)=>void\r\n    items: Array<ItemType>\r\n    onClick: (value: any)=>void\r\n}\r\n\r\nfunction Accordion(props: AccordionPropsType) {\r\n    return (\r\n        <div>\r\n            <AccordionTitle title={props.titleValue} onChange={props.onChange} collapsed={!props.collapsed}/>\r\n            {!props.collapsed && <AccordionBody items={props.items} onClick={props.onClick}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype AccordionTitlePropsType = {\r\n    title: string\r\n    onChange:(collapsed: boolean)=>void\r\n    collapsed: boolean\r\n}\r\n\r\nfunction AccordionTitle(props: AccordionTitlePropsType) {\r\n    console.log(\"AccordionTitle rendering\")\r\n    return (\r\n        <h3 onClick={()=>{props.onChange(props.collapsed)}}>{props.title}</h3>\r\n    )\r\n}\r\ntype AccordionBodyPropsType = {\r\n    items: Array<ItemType>\r\n    onClick: (value: any)=>void\r\n}\r\nfunction AccordionBody(props:AccordionBodyPropsType) {\r\n    console.log(\"AccordionBody rendering\")\r\n    return (\r\n        <ul>\r\n            {props.items.map((i,index)=><li key={index} onClick={()=>{props.onClick(i.value)}}>{i.title}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Accordion","import React from \"react\";\r\n\r\nexport type ValueRatingType = 0 | 1 | 2 | 3 | 4 | 5\r\n\r\ntype RatingPropsType = {\r\n    value: ValueRatingType\r\n    onClick: (value:ValueRatingType) =>void\r\n}\r\n\r\nexport function Rating(props: RatingPropsType) {\r\n\r\n    return (\r\n        <div>\r\n            <Star selected={props.value > 0} onClick={props.onClick} value={1}/>\r\n            <Star selected={props.value > 1} onClick={props.onClick} value={2}/>\r\n            <Star selected={props.value > 2} onClick={props.onClick} value={3}/>\r\n            <Star selected={props.value > 3} onClick={props.onClick} value={4}/>\r\n            <Star selected={props.value > 4} onClick={props.onClick} value={5}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\ntype StarPropsType = {\r\n    selected: boolean\r\n    value: ValueRatingType\r\n    onClick: (value: ValueRatingType) => void\r\n}\r\n\r\nfunction Star(props: StarPropsType) {\r\n    console.log(\"Star rendering\")\r\n    return (\r\n        <span onClick={()=>{props.onClick(props.value)}}>{props.selected ? <b>star </b> : \"star \"}</span>\r\n    )\r\n}","import React, {useState} from \"react\";\r\n\r\ntype AccordionPropsType = {\r\n    titleValue: string\r\n}\r\n\r\nfunction UncontrolledAccordion(props: AccordionPropsType) {\r\n    let [collapsed,setCollapsed] = useState(false)\r\n    return (\r\n        <div>\r\n            <AccordionTitle title={props.titleValue} onClick={()=>{setCollapsed(!collapsed)}}/>\r\n            {!collapsed && <AccordionBody/>}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype AccordionTitlePropsType = {\r\n    title: string\r\n    onClick:()=>void\r\n}\r\n\r\nfunction AccordionTitle(props: AccordionTitlePropsType) {\r\n    console.log(\"AccordionTitle rendering\")\r\n    return (\r\n        <h3 onClick={()=>{props.onClick()}}>{props.title}</h3>\r\n    )\r\n}\r\n\r\nfunction AccordionBody() {\r\n    console.log(\"AccordionBody rendering\")\r\n    return (\r\n        <ul>\r\n            <li>1</li>\r\n            <li>2</li>\r\n            <li>3</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default UncontrolledAccordion","import React, {useState} from \"react\";\r\nimport {ValueRatingType} from \"../Rating/Rating\";\r\n\r\ntype RatingPropsType = {\r\n    defaultValue?:ValueRatingType\r\n}\r\n\r\nexport function UncontrolledRating(props: RatingPropsType) {\r\n    let [value, setValue] = useState<ValueRatingType>(props.defaultValue ? props.defaultValue: 0)\r\n    return (\r\n        <div>\r\n            <Star selected={value > 0} setValue={()=>{setValue(1)}} />\r\n            <Star selected={value > 1} setValue={()=>{setValue(2)}} />\r\n            <Star selected={value > 2} setValue={()=>{setValue(3)}} />\r\n            <Star selected={value > 3} setValue={()=>{setValue(4)}} />\r\n            <Star selected={value > 4} setValue={()=>{setValue(5)}} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\ntype StarPropsType = {\r\n    selected: boolean\r\n    setValue: ()=>void\r\n}\r\n\r\nfunction Star(props: StarPropsType) {\r\n    console.log(\"Star rendering\")\r\n    return (\r\n        <span onClick={() => {   props.setValue()     }}>\r\n            {props.selected ? <b>star </b> : \"star \"}\r\n        </span>\r\n    )\r\n}","import React, {useState} from \"react\";\r\n\r\ntype OnOffPropsType = {\r\n    defaultOn?: boolean\r\n    onChange: (on: boolean)=>void\r\n}\r\n\r\nfunction UncontrolledOnOff(props: OnOffPropsType) {\r\n\r\n    let [on, setOn] = useState(props.defaultOn ? props.defaultOn:false)//hook with init value\r\n\r\n    const onStyle = {\r\n        width: \"30px\",\r\n        height: \"20px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        padding: \"2px\",\r\n        backgroundColor: on ? \"green\" : \"white\"\r\n    }\r\n    const offStyle = {\r\n        width: \"30px\",\r\n        height: \"20px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        marginLeft: \"2px\",\r\n        padding: \"2px\",\r\n        backgroundColor: on ? \"white\" : \"red\"\r\n    }\r\n    const indicatorStyle = {\r\n        width: \"10px\",\r\n        height: \"10px\",\r\n        borderRadius: \"5px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        marginLeft: \"5px\",\r\n        backgroundColor: on ? \"green\" : \"red\"\r\n    }\r\n    const onClicked =()=>{setOn(true)\r\n        props.onChange(true) }\r\n\r\n        const offClicked = () => {setOn(false)\r\n            props.onChange(false) }\r\n    return <div>\r\n        <div style={onStyle} onClick={onClicked}\r\n            onChange={()=>{}}\r\n        >On\r\n        </div>\r\n        <div style={offStyle} onClick={offClicked}\r\n\r\n        >Off\r\n        </div>\r\n        <div style={indicatorStyle}></div>\r\n    </div>\r\n}\r\n\r\nexport default UncontrolledOnOff","import React from \"react\";\r\n\r\ntype OnOffPropsType = {\r\n    on: boolean\r\n    onClick: (on:boolean)=>void\r\n}\r\n\r\nexport function OnOff(props: OnOffPropsType) {\r\n\r\n\r\n    const onStyle = {\r\n        width: \"30px\",\r\n        height: \"20px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        padding: \"2px\",\r\n        backgroundColor: props.on ? \"green\" : \"white\"\r\n    }\r\n    const offStyle = {\r\n        width: \"30px\",\r\n        height: \"20px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        marginLeft: \"2px\",\r\n        padding: \"2px\",\r\n        backgroundColor: props.on ? \"white\" : \"red\"\r\n    }\r\n    const indicatorStyle = {\r\n        width: \"10px\",\r\n        height: \"10px\",\r\n        borderRadius: \"5px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        marginLeft: \"5px\",\r\n        backgroundColor: props.on ? \"green\" : \"red\"\r\n    }\r\n\r\n    return <div>\r\n        <div style={onStyle} onClick={() => {props.onClick(true)}}>On\r\n        </div>\r\n        <div style={offStyle} onClick={() => {props.onClick(false)}}>Off\r\n        </div>\r\n        <div style={indicatorStyle}></div>\r\n    </div>\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Accordion from \"./components/Accordion/Accordion\";\r\nimport {Rating, ValueRatingType} from \"./components/Rating/Rating\";\r\n\r\nimport UncontrolledAccordion from \"./components/UncontrolledAccordion/UncontrolledAccordion\";\r\nimport {UncontrolledRating} from \"./components/UncontrolledRating/UncontrolledRating\";\r\nimport UncontrolledOnOff from \"./components/UncontrolledOnOff/UncontrolledOnOff\";\r\nimport {OnOff} from \"./components/OnOff/OnOff\";\r\n\r\n\r\nconst App = () => {\r\n    let [valueRating, setValueRating] = useState<ValueRatingType>(0)\r\n    let [valueCollapsed, setValueCollapsed] = useState(false)\r\n    let [valueOn, setValueOn] = useState(false)\r\n    return (\r\n        <div className={\"App\"}>\r\n            <PageTitle title={\"This is App component\"}/>\r\n\r\n            <b>UncontrolledComponents</b>\r\n\r\n            <UncontrolledAccordion titleValue={\"Menu\"}/>\r\n            <UncontrolledRating/>\r\n            <UncontrolledOnOff onChange={setValueOn}/>{valueOn.toString()}\r\n\r\n            <hr/>\r\n\r\n            <b>ControlledComponents</b>\r\n\r\n            <Accordion titleValue={\"Friends\"} collapsed={valueCollapsed} onChange={setValueCollapsed} items={[]} onClick={x=>x}/>\r\n            <Rating value={valueRating} onClick={setValueRating}/>\r\n            <OnOff onClick={setValueOn} on={valueOn} />\r\n\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// пустой тег - фрагмент(формально вернули JSX-элемент, но он не превратится ни в какую разметку)\r\ntype PageTitlePropsType = {\r\n    title: string\r\n}\r\n\r\nfunction PageTitle(props: PageTitlePropsType) {\r\n    debugger\r\n    return (\r\n        <div className={\"PageTitle\"}>{props.title}</div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />,  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}